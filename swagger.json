{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Skill-app Backend",
      "description": "Skill-app backend api docs",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000/v1/",
    "basePath": "/",
    "tags": [
      {
        "name": "User",
        "description": "API for users in the system"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "servers": [
      {
        "url": "http://localhost:3000/v1/",
        "description": "Development Serve"
      }
    ],
    "paths": {
      "/user/register": {
        "post": {
          "tags": [
            "User"
          ],
          "description": "Create new team leader in system",
          "parameters": [
            {
              "name": "SignUp Request",
              "in": "body",
              "description": "Team Leader that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        } 
      },
      "/user/register-team-member": {
        "post": {
          "tags": [
            "User"
          ],
          "description": "Create new team member in system",
          "parameters": [
            {
              "name": "token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "image",
              "in": "formData",
              "type": "file",
              "description": "file to upload"
            },
            {
              "name": "name",
              "in": "formData",
              "type": "string",
              "description": "name of user"
            },
            {
              "name": "surname",
              "in": "formData",
              "type": "string",
              "description": "surname of user"
            },
            {
              "name": "position",
              "in": "formData",
              "type": "string",
              "description": "position of team member"
            },
            {
              "name": "email",
              "in": "formData",
              "type": "string",
              "description": "email of team member"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New Team Member is created",
              "schema": {
                "$ref": "#/definitions/TeamMemberRegisterResponse"
              }
            }
          }
        } 
      },
      "/user/register-team-member-password/{teamMemberId}": {
        "post": {
          "tags": [
            "User"
          ],
          "description": "Completes new team member registration with password in system",
          "parameters": [
            {
              "name": "teamMemberId",
              "in": "path",
              "description": "Team member that we want to create"
            },
            {
              "name": "SignUp Request",
              "in": "body",
              "description": "Team Leader for which we want to complete registration process",
              "schema": {
                "$ref": "#/definitions/TeamMemberPasswordBody"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New Team Member is created",
              "schema": {
                "$ref": "#/definitions/TeamMemberRegisterResponse"
              }
            }
          }
        } 
      },
      "/user/signin": {
        "post": {
          "tags": [
            "User"
          ],
          "description": "User can login to system",
          "parameters": [
            {
              "name": "Signin Request",
              "in": "body",
              "description": "User that we want to login",
              "schema": {
                "$ref": "#/definitions/UserLogin"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "User logged in",
              "schema": {
                "$ref": "#/definitions/UserLoginResponseDto"
              }
            },
            "400": {
              "description": "Invalid Password or Email not verified",
              "schema": {
                "$ref": "#/definitions/ErrorDto"
              }
            },
            "404": {
              "description": "User does nto exist or Url not found",
              "schema": {
                "$ref": "#/definitions/ErrorDto"
              }
            }
          }
        } 
      },
      "/user/encrypt": {
        "post": {
          "tags": ["User"],
          "description": "User can use this api to encrypt text for passwords",
          "parameters": [
            {
              "name": "Request body for encrypting password",
              "in": "body",
              "description": "Request body parameters for encrypting password",
              "schema": {
                "$ref": "#/definitions/EncryptTextRequest"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Password encrypted successfully"
            }
          }
        }
      },
      "/user/verify-email": {
        "post": {
          "tags": ["User"],
          "description": "User can verify email to system",
          "parameters": [
            {
              "name": "Verify Email",
              "in": "body",
              "description": "User that we want to login",
              "schema": {
                "$ref": "#/definitions/TokenRequest"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "User logged in"
            },
            "400": {
              "description": "Invalid Password or Email not verified",
              "schema": {
                "$ref": "#/definitions/ErrorDto"
              }
            },
            "401": {
              "description": "Unauthorized user",
              "schema": {
                "$ref": "#/definitions/ErrorDto"
              }
            }
          }
        }
      },
      "/user/team-members": {
        "get": {
          "tags": ["User"],
          "description": "Team leaders can get all users",
          "parameters": [
            {
              "name": "token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "search",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "count",
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "User's List Response",
              "schema": {
                "$ref": "#/definitions/TeamMemberListingResponse"
              }
            }
          }
        }
      },
      "/user/logout": {
        "patch": {
          "tags": ["User"],
          "description": "User will be logged out of the system",
          "parameters": [
            {
              "name": "token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "User will be logged out"
            }
          }
        }
      },
      "/user/forgot-password": {
        "post": {
          "tags": ["User"],
          "description": "Sends forgot password link to user",
          "parameters": [
            {
              "name": "forgot password request",
              "in": "body",
              "description": "email on which we will send link",
              "schema": {
                "$ref": "#/definitions/ForgotPasswordRequest"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "link sent to registered email"
            },
            "404": {
              "description": "User does not exist"
            }
          }
        }
      },
      "/user/reset": {
        "post": {
          "tags": ["User"],
          "description": "Reset password for a user",
          "parameters": [
            {
              "name": "Reset password request",
              "in": "body",
              "description": "params by which we reset user password",
              "schema": {
                "$ref": "#/definitions/ResetPasswordRequest"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Password reset successfully"
            },
            "404": {
              "description": "User does not exist"
            },
            "400": {
              "description": "Invalid or expired link"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "TeamMemberPasswordBody": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "TeamMember": {
        "required": [
          "name",
          "email",
          "surname",
          "position"
        ],
        "properties": {
          "name": {
            "type": "string",
            "required": true
          },
          "surname": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          },
          "position": {
            "type": "string"
          }
        }
      },
      "TeamMemberRegisterResponse": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "role": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "TeamMemberListingResponse": {
        "properties": {
            "data": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "surname": {
                        "type": "string"
                      },
                      "position": {
                        "type": "string"
                      }
                    }
                  }
                },
                "totalUsersCount": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
        }
      },
      "ForgotPasswordRequest": {
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "required": [
          "password",
          "resetPasswordToken"
        ],
        "properties": {
          "password": {
            "type": "string"
          },
          "resetPasswordToken": {
            "type": "string"
          }
        }
      },
      "TokenRequest": {
        "required": ["token"],
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "EncryptTextRequest": {
        "required": ["password"],
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "UserLogin": {
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserLoginResponseDto": {
        "required": [
          "username",
          "email",
          "activeToken",
          "createdAt",
          "id"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "activeToken": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ErrorDto": {
        "required": [
          "code",
          "errorMessage",
          "isPublic"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "isPublic": {
            "type": "string"
          }
        }
      }
     
    }
  }